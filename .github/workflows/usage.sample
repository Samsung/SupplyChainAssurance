name: Release

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  release:
    types: [created]

jobs:
  Release:
    permissions:
      id-token: write
      contents: write
    uses: samsung/supplychainassurance/.github/workflows/python_releasor.yml@v1.0.0
    with:
      version: "3.9"
    secrets:
      EXPECTED_REPOSITORY: "${{ secrets.EXPECTED_REPOSITORY }}"
      ECODETOKEN: "${{ secrets.ECODETOKEN }}"
      GITHUBTOKEN: "${{ secrets.GITHUB_TOKEN }}"

  Publish:
    runs-on: ubuntu-latest
    needs: [ Release ]

    steps:
    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: '3.9'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install twine

    - name: Download Artifacts
      uses: samsung/supplychainassurance/.github/actions/download-artifact@v1.0.0
      with:
        hash: ${{ needs.Release.outputs.hash }}

    - name: Publish to PyPi
      if: ${{ 'release' == github.event_name }}
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      run: |
        cd ${{ steps.download.outdir }}
        twine upload "${{ needs.Release.outputs.artifact }}"

