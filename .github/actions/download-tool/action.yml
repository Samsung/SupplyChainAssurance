name: "Download scia_tool"
inputs:
  name :
    description: "The name of tool to download"
    required: true

  token:
    description: "Token to access ecode github"
    required: true

runs:
  using: "composite"
  steps:
    - name: Download tool
      shell: bash
      run : |
        set -euo pipefail
        git clone -b dev-jiin https://${{ inputs.token }}@github.ecodesamsung.com/CRTM/scia_tool
        cd scia_tool/${{ inputs.name }} && git lfs pull --include ${{ inputs.name }} 

    - name: Verify tool
      shell: bash
      run : |
        if [[ "${{ inputs.name }}" == "generator" ]]; then
          EXPECTED_HASH="d003537a8a203c581f9479bde6d3f49632b4b70a318117cfcc31a51c82d44e72"
        elif [[ "${{ inputs.name }}" == "verifier" ]]; then
          EXPECTED_HASH="b59cb7078db3201bb54a2a041fd0d2fdc74c95dd5851187031dc46c271e76525"
        fi
        COMPUTED_HASH=$(sha256sum scia_tool/${{ inputs.name }}/${{ inputs.name }} | awk '{print $1}')
        set -euo pipefail
        echo "${{ inputs.name }} expected hash is $EXPECTED_HASH"
        echo "${{ inputs.name }} computed hash is $COMPUTED_HASH"
        if [[ "$COMPUTED_HASH" != "$EXPECTED_HASH" ]]; then
            echo "${{ inputs.name }} hash do not match"
            exit -2
        fi

    - name: Build tool contaniner
      shell: bash
      env :
        GITHUB_CONTEXT: "${{ toJSON(github) }}"
      run : |
        set -euo pipefail
        docker build --build-arg GITHUB_CONTEXT="${GITHUB_CONTEXT}" -t scia:${{ inputs.name }} scia_tool/${{ inputs.name }}
        rm -rf scia_tool

